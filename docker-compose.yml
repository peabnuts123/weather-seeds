version: '3.7'

services:
  db:
    container_name: 'weather_db'
    build: db
    restart: unless-stopped
    env_file: db/.env.docker
    volumes:
      - './db/data:/var/lib/postgresql/data'
      - './db:/var/lib/postgresql/src'
    ports:
      - '5432:5432'
    working_dir: /var/lib/postgresql
    entrypoint: src/run.sh

  fetcher:
    container_name: 'weather_fetcher'
    image: 'node:lts-alpine'
    restart: unless-stopped
    env_file: fetcher/.env.docker
    volumes:
      # Fetcher source
      - './fetcher:/home/node/fetcher'
      # Shared code
      - './db/models:/home/node/db/models'
      # Fake node_modules for shared code
      - './fetcher/node_modules:/home/node/db/node_modules'
      # Add daily script to daily cron folder
      - './fetcher/daily-fetch.sh:/etc/periodic/daily/daily-fetch'
    working_dir: /home/node/fetcher
    entrypoint: ./run.sh
    depends_on:
      - db

  www:
    container_name: 'weather_www'
    build: www
    restart: unless-stopped
    env_file: www/.env.docker
    ports:
      - '8080:8080'
  #   labels:
  #     # Traefik config
  #     traefik.enable: "true"
  #     traefik.frontend.rule: "Host:${WWW_HOST_NAME}"
  #     traefik.port: "8080"
  #     traefik.frontend.redirect.entryPoint: https
  #   networks:
  #     # Connect to external network used by traefik
  #     - traefik
    depends_on:
      - db

# networks:
#   # Named network created for Traefik
#   traefik:
#     external: true
