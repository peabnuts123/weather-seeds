version: '3.7'

services:
  db:
    container_name: 'weather_db'
    build: db
    restart: unless-stopped
    env_file: db/.env.docker
    volumes:
      # Timezone
      - '${LOCAL_TIME_MOUNT:-/etc/localtime}:/etc/localtime:ro'
      # Data directory
      - './db/data:/var/lib/postgresql/data'
      # db project source code
      - './db:/var/lib/postgresql/src'
    working_dir: /var/lib/postgresql
    entrypoint: src/run.sh

  fetcher:
    container_name: 'weather_fetcher'
    image: 'node:12-alpine'
    restart: unless-stopped
    env_file: fetcher/.env.docker
    volumes:
      # Timezone
      - '${LOCAL_TIME_MOUNT:-/etc/localtime}:/etc/localtime:ro'
      # Fetcher source
      - './fetcher:/home/node/fetcher'
      # Shared code
      - './db/models:/home/node/db/models'
      - './common:/home/node/common'
      # Fake node_modules for shared code
      - './fetcher/node_modules:/home/node/node_modules:ro'
      # Add daily scripts to daily cron folder
      - './fetcher/cron:/home/node/cron'
      - './fetcher/cron/_jobs:/home/node/cron/${FETCHER_JOB_FREQUENCY:-daily}'
      # Custom crontab configuration
      - './fetcher/crontab.properties:/var/spool/cron/crontabs/root'
    working_dir: /home/node/fetcher
    entrypoint: ./run.sh
    depends_on:
      - db

  www:
    container_name: 'weather_www'
    image: 'node:12-alpine'
    restart: unless-stopped
    env_file: www/.env.docker
    volumes:
      # Timezone
      - '${LOCAL_TIME_MOUNT:-/etc/localtime}:/etc/localtime:ro'
      # www source
      - './www:/home/node/www'
      # Shared code
      - './db/models:/home/node/db/models'
      - './common:/home/node/common'
      # Fake node_modules for shared code
      - './www/server/node_modules:/home/node/node_modules:ro'
    working_dir: /home/node/www
    entrypoint: ./run.sh
    depends_on:
      - db
